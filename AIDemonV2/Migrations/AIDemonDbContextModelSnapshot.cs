// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AIDemonV2.Migrations
{
    [DbContext(typeof(AIDemonDbContext))]
    partial class AIDemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AIModel")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Favourite")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OriginalMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgrammingLanguage")
                        .HasColumnType("text");

                    b.Property<int?>("ReplyToMessageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RunDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReplyToMessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AIModel")
                        .HasColumnType("text");

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InstructionPrompt")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProgrammingLanguage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiKey = "",
                            CreationDate = new DateTime(2025, 3, 11, 8, 15, 18, 41, DateTimeKind.Utc).AddTicks(3778),
                            InstructionPrompt = "You are a helpful assistant.",
                            ModificationDate = new DateTime(2025, 3, 11, 8, 15, 18, 41, DateTimeKind.Utc).AddTicks(3779)
                        });
                });

            modelBuilder.Entity("Message", b =>
                {
                    b.HasOne("Message", "ReplyTo")
                        .WithMany("Replies")
                        .HasForeignKey("ReplyToMessageId");

                    b.Navigation("ReplyTo");
                });

            modelBuilder.Entity("Message", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
